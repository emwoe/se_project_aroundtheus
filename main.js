!function(){"use strict";var e={498:function(e,t,r){e.exports=r.p+"f44d4bda95b365b93115.jpg"},460:function(e,t,r){e.exports=r.p+"70dde39c90b527ec62b2.jpg"},338:function(e,t,r){e.exports=r.p+"b3dd0fefea7f7de0e25b.jpg"},775:function(e,t,r){e.exports=r.p+"1c08a42a1ca45d1746f3.jpg"},291:function(e,t,r){e.exports=r.p+"b87c022f67fef0740657.jpg"},182:function(e,t,r){e.exports=r.p+"125bf2b043e25dddbfe2.jpg"}},t={};function r(o){var s=t[o];if(void 0!==s)return s.exports;var i=t[o]={exports:{}};return e[o](i,i.exports,r),i.exports}r.m=e,r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r.b=document.baseURI||self.location.href,function(){new URL(r(460),r.b),new URL(r(291),r.b),new URL(r(182),r.b),new URL(r(775),r.b),new URL(r(338),r.b),new URL(r(498),r.b);const e={formSelector:".form",inputSelector:".modal__input",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__button_inactive",inputErrorClass:"modal__input_type_error",errorClass:"modal__input-error_active",errorMessageSelectorSuffix:"-input-error"},t=(Array.from(document.querySelectorAll(".form")),document.querySelector(".modal_type_profile")),o=document.querySelector(".info__button"),s=(t.querySelector(".modal__close-button"),t.querySelector(".modal__container")),i=(t.querySelector(".modal__save-button"),document.querySelector(".modal_type_new-image")),n=document.querySelector(".profile__button"),a=(i.querySelector(".modal__close-button"),i.querySelector(".modal__container")),l=(document.querySelector(".info__name"),document.querySelector("#name")),d=(document.querySelector(".info__job-title"),document.querySelector("#job-description")),c=document.querySelector(".profile__sheer-hover"),u=document.querySelector(".modal_type_change-profile-picture").querySelector(".modal__container");document.querySelector("#title"),document.querySelector("#image-link"),document.querySelectorAll(".card__image"),document.querySelector(".modal__wrapper_type_image-pop-out"),document.querySelector(".modal__close-button_type-image-pop-out"),document.querySelector(".card__pop-out_caption");class _{constructor(e,t,r,o,s){this._cardSelector=t,this.data=e,this._handleImageClick=r,this._handleDeleteBtn=o,this._handleLikeBtn=s}_getTemplate(){return this._cardTemplate=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0),this._cardTemplate}generateCard(){return this._cardElement=this._getTemplate(),this._cardHeart=this._cardElement.querySelector(".card__heart"),this._setEventListeners(),this._cardElement.querySelector(".card__name").textContent=this.data.name,this._cardElement.querySelector(".card__image").src=this.data.link,this._cardElement.querySelector(".card__image").alt=this.data.name,1==this.data.isLiked?this._cardHeart.classList.add("card__heart-option-liked"):this._cardHeart.classList.remove("card__heart-option-liked"),this._cardElement}_setEventListeners(){const e=this._cardElement.querySelector(".card__delete-btn");this._cardHeart.addEventListener("click",(()=>{this._cardHeart.classList.toggle("card__heart-option-liked"),this._handleLikeBtn()})),e.addEventListener("click",(()=>{console.log(this),this._handleDeleteBtn(this)})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleImageClick(this)}))}deleteCard(){console.log(this),this._cardElement.remove()}}class h{constructor(e,t){this._validationConfig=e,this._form=t,this._inputList=Array.from(this._form.querySelectorAll(this._validationConfig.inputSelector)),this._buttonElement=this._form.querySelector(this._validationConfig.submitButtonSelector)}_disableButton(){this._buttonElement.classList.add(this._validationConfig.inactiveButtonClass),this._buttonElement.disabled=!0}_enableButton(){this._buttonElement.classList.remove(this._validationConfig.inactiveButtonClass),this._buttonElement.disabled=!1}toggleButtonState(){this._hasInvalidInput(this._inputList)?this._disableButton():this._enableButton()}_setEventListeners(){this._disableButton(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{console.log("Input made!"),console.log(e),this._checkInputValidity(e),this.toggleButtonState()}))}))}_hasInvalidInput(){return this._inputList.some((e=>!e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e,this._form,this._validationConfig):this._showInputError(e,this._form,e.validationMessage,this._validationConfig)}_showInputError(e,t,r,o){this._errorElement=this._form.querySelector(`.${e.id}${this._validationConfig.errorMessageSelectorSuffix}`),e.classList.add(this._validationConfig.inputErrorClass),this._errorElement.textContent=r,this._errorElement.classList.add(this._validationConfig.errorClass)}_hideInputError(e,t,r){e.classList.remove(this._validationConfig.inputErrorClass),this._errorElement=this._form.querySelector(`.${e.id}${this._validationConfig.errorMessageSelectorSuffix}`),this._errorElement.classList.remove(this._validationConfig.errorClass),this._errorElement.textContent=""}resetValidation(){this._disableButton(),this._inputList.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class p{constructor(e,t){let{items:r,renderer:o}=e;this._items=r,this._renderer=o,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._element=this._renderer(e),this.addItem(this._element)}))}addItem(e){this._container.prepend(e)}}class m{constructor(e){let{popupSelector:t}=e;this._popupModal=document.querySelector(t),this._popupModalCloseBtn=this._popupModal.querySelector(".modal__close-button"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._addEscEventListener(),this._popupModal.classList.add("modal_opened")}close(){this._popupModal.classList.remove("modal_opened"),this._removeEscEventListener()}_handleEscClose(e){"Escape"===e.key&&(this.close(),console.log("TEST REMOVE"))}_handleRemoteClick(e){e.target===e.currentTarget&&(console.log(e.target),this.close())}setEventListeners(){this._popupModalCloseBtn.addEventListener("click",(()=>{this.close()})),this._popupModal.addEventListener("click",this._handleRemoteClick.bind(this))}_addEscEventListener(){document.addEventListener("keydown",this._handleEscClose,!1),console.log("Listener added!")}_removeEscEventListener(){document.removeEventListener("keydown",this._handleEscClose,!1),console.log("Listener removed!")}}class v extends m{constructor(e){let{popupSelector:t,handleFormSubmit:r,buttonText:o}=e;super({popupSelector:t}),this._handleFormSubmit=r,this._buttonText=o,this._modalForm=this._popupModal.querySelector(".modal__container"),this._modalInputs=this._popupModal.querySelectorAll(".modal__input")}_getInputValues(){const e={};return this._modalInputs.forEach((t=>{e[t.name]=t.value})),console.log("Form values:",e),e}setEventListeners(){this._modalForm.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this.renderSaving(!0),this._handleFormSubmit(t),this.renderSaving(!1)})),super.setEventListeners()}stopSaving(e){e._modalForm.querySelector(".modal__save-button").textContent=e._buttonText,console.log("Found _modalForm and done"),e.close()}renderSaving(e){e?(this._modalForm.querySelector(".modal__save-button").textContent="Saving...",console.log("Found _modalForm and saving"),console.log(this._modalForm.querySelector(".modal__save-button").textContent)):(console.log(this),setTimeout(this.stopSaving,1e3,this))}}let S,f;const g=new class{constructor(e){let{apiAddress:t,apiHeaders:r}=e;this._apiAddress=t,this._apiHeaders=r}_serverRequest(e,t){return fetch(e,t).then(this.renderResult)}renderResult(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return this._serverRequest(`${this._apiAddress}/cards`,{headers:this._apiHeaders})}fetchUserInfo(){return this._serverRequest(`${this._apiAddress}/users/me`,{headers:this._apiHeaders})}editUserInfo(e){return this._serverRequest(`${this._apiAddress}/users/me`,{method:"PATCH",headers:this._apiHeaders,body:JSON.stringify({name:e.name,about:e.job})})}editUserProfilePicture(e){return this._serverRequest("https://around-api.en.tripleten-services.com/v1/users/me/avatar",{method:"PATCH",headers:this._apiHeaders,body:JSON.stringify({avatar:e.avatar})})}addNewCard(e){return this._serverRequest(`${this._apiAddress}/cards`,{method:"POST",headers:this._apiHeaders,body:JSON.stringify({name:e.name,link:e.link})})}deleteCard(e){return this._serverRequest(`${this._apiAddress}/cards/${e}`,{method:"DELETE",headers:this._apiHeaders})}addLike(e){return this._serverRequest(`${this._apiAddress}/cards/${e}/likes`,{method:"PUT",headers:this._apiHeaders})}removeLike(e){return this._serverRequest(`${this._apiAddress}/cards/${e}/likes`,{method:"DELETE",headers:this._apiHeaders})}checkCardsStatus(){return this._serverRequest(`${this._apiAddress}/cards`,{headers:this._apiHeaders})}loadPageResults(){return Promise.all([this.getInitialCards(),this.fetchUserInfo()])}}({apiAddress:"https://around-api.en.tripleten-services.com/v1",apiHeaders:{authorization:"34ba410c-a4f9-4189-8d1e-4545749c88e4","Content-Type":"application/json"}}),b=new class{constructor(e){let{userNameSelector:t,userJobSelector:r,profilePictureSelector:o}=e;this._userNameSelector=t,this._userJobSelector=r,this._userName=document.querySelector(t),this._userJob=document.querySelector(r),this._userProfilePicture=document.querySelector(o)}getUserInfo(){return{name:this._userName.textContent,job:this._userJob.textContent}}getUserPictureLink(){return{avatar:this._userProfilePicture.src}}setUserInfo(e){this._userName.textContent=e.name,this._userJob.textContent=e.job}setUserPicture(e){this._userProfilePicture.src=e.avatar}}({userNameSelector:".info__name",userJobSelector:".info__job-title",profilePictureSelector:".profile__circle"});function E(e){return new _(e,"#localeCard",w,C,q).generateCard()}g.loadPageResults().then((e=>{let[t,r]=e;f=new p({items:t,renderer:E},".elements"),f.renderItems(),console.log(r),b.setUserInfo({name:r.name,job:r.about}),b.setUserPicture({avatar:r.avatar})})).catch((e=>{console.error(e)}));const y=new class extends m{constructor(e){let{popupSelector:t,imageSelector:r}=e;super({popupSelector:t}),this._popupModalImage=this._popupModal.querySelector(r),this._popupModalCaption=this._popupModal.querySelector(".card__pop-out_caption")}open(e,t){this._popupModalImage.src=t,this._popupModalImage.alt=e,this._popupModalCaption.textContent=e,super.open()}}({popupSelector:".modal_type_image-pop-out",imageSelector:".card__image_option_pop-out"});y.setEventListeners();const L=new class extends m{constructor({popupSelector:e,handleBtnClick:t}){super({popupSelector:e}),this._handleBtnClick=t,this._popupModal=document.querySelector(e),this._modalButton=this._popupModal.querySelector(".modal__save-button")}setEventListeners(){this._modalButton.addEventListener("click",(e=>{e.preventDefault(),this._handleBtnClick()})),super.setEventListeners()}}({popupSelector:".modal_type_delete-image",handleBtnClick:()=>{g.deleteCard(S.data._id),S.deleteCard(),L.close()}});function C(e){return console.log(e),L.open(),L.setEventListeners(),S=e,S}function q(){0==this.data.isLiked?(g.addLike(this.data._id),this.data.isLiked=!0):(g.removeLike(this.data._id),this.data.isLiked=!1)}o.addEventListener("click",(()=>{k.open();const e=b.getUserInfo();console.log(e),l.value=e.name,d.value=e.job,B.resetValidation()})),c.addEventListener("click",(()=>{I.open()})),n.addEventListener("click",(()=>{x.open()}));const k=new v({popupSelector:".modal_type_profile",handleFormSubmit:e=>{g.editUserInfo(e).then((e=>{b.setUserInfo({name:e.name,job:e.about})})).catch((e=>{console.error(e)}))},buttonText:"Save"}),I=new v({popupSelector:".modal_type_change-profile-picture",handleFormSubmit:e=>{g.editUserProfilePicture(e).then((e=>{b.setUserPicture({avatar:e.avatar})})).catch((e=>{console.error(e)}))},buttonText:"Save"}),x=new v({popupSelector:".modal_type_new-image",handleFormSubmit:e=>{g.addNewCard(e).then((e=>E(e))).then((e=>f.addItem(e))).catch((e=>{console.error(e)})),a.reset(),P.toggleButtonState()},buttonText:"Create"});function w(e){y.open(e.data.name,e.data.link)}k.setEventListeners(),x.setEventListeners(),I.setEventListeners();const B=new h(e,s),P=new h(e,a),R=new h(e,u);B.enableValidation(),P.enableValidation(),R.enableValidation()}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,